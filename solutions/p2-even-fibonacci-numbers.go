package main

import (
	"fmt"
)

/*
   Each new term in the Fibonacci sequence is generated by adding the previous
   two terms. By starting with 1 and 2, the first 10 terms will be:

       1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

   By considering the terms in the Fibonacci sequence whose values do not
   exceed four million, find the sum of the even-valued terms.
*/

func main() {

	// make initial fibSum call, remember to include 2 in the sum, since it is
	// even
	even_fib_sum := fibSum(1, 2, 2, 2, 4000000)

	// should print 4613732
	fmt.Println(even_fib_sum)
}

func fibSum(a, b, sum, mod, limit int) int {
	// if we have reached the limit, return
	if a+b >= limit {
		return sum
	} else {
		// get the next Fibonacci number
		next := a + b

		// only add to the sum if the new number is divisible by mod
		if next%mod == 0 {
			sum += next
		}

		// make recursive call
		return fibSum(b, next, sum, mod, limit)
	}

}
